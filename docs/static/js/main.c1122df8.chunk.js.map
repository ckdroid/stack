{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","showEl","useRef","useState","scene","setScene","camera","setCamera","renderer","setRenderer","controls","setControls","count","setCount","animate","requestAnimationFrame","render","useEffect","console","log","current","init","canvasW","clientWidth","canvasH","clientHeight","THREE","antialias","physicallyCorrectLights","outputEncoding","setClearColor","setPixelRatio","window","devicePixelRatio","setSize","position","z","x","y","ablight","add","light","Math","PI","set","OrbitControls","domElement","maxPolarAngle","minPolarAngle","update","GLTFLoader","load","process","gltf","xhr","loaded","total","error","appendChild","arr","hundleClick","item","forEach","element","getObjectByName","visible","className","href","alt","width","height","src","style","margin","id","background","ref","map","index","padding","marginRight","onClick","bind","marginLeft","reset","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1122df8.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nfunction App() {\r\n  const showEl = useRef()\r\n\r\n  const [scene, setScene] = useState();\r\n  const [camera, setCamera] = useState();\r\n  const [renderer, setRenderer] = useState();\r\n  const [controls, setControls] = useState();\r\n  const [count, setCount] = useState(28);\r\n\r\n  const [model, setModel] = useState();\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('animate')\r\n    animate();\r\n  }, [renderer]);\r\n\r\n  function animate() {\r\n    // console.log('animate')\r\n    requestAnimationFrame(animate);\r\n    // if (cube) {\r\n    //   cube.rotation.x += 0.01;\r\n    //   cube.rotation.y += 0.01;\r\n    // }\r\n    if (renderer) {\r\n      renderer.render(scene, camera);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (showEl.current) {\r\n      // console.log('showEl', showEl.current)\r\n      init();\r\n    }\r\n  }, []);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   if (model) {\r\n  //     console.log('model',model)\r\n  //     if (scene) {\r\n\r\n  //       let mesh01 = new THREE.Mesh(model.geometry,model.material);\r\n  //       mesh01.scale.x=model.scale.x\r\n  //       mesh01.scale.y=model.scale.y\r\n  //       mesh01.scale.z=model.scale.z\r\n  //       scene.add(mesh01);\r\n\r\n  //       let mesh02 = new THREE.Mesh(model.geometry,model.material);\r\n  //       mesh02.position.x=9.3\r\n  //       mesh02.scale.x=model.scale.x\r\n  //       mesh02.scale.y=model.scale.y\r\n  //       mesh02.scale.z=model.scale.z\r\n  //       scene.add(mesh02);\r\n\r\n  //       let mesh03 = new THREE.Mesh(model.geometry,model.material);\r\n  //       mesh03.position.x=9.3\r\n  //       mesh03.scale.x=model.scale.x\r\n  //       mesh03.scale.y=model.scale.y\r\n  //       mesh03.scale.z=model.scale.z\r\n  //       scene.add(mesh03);\r\n\r\n\r\n\r\n  //     }\r\n  //   }\r\n  // }, [model]);\r\n\r\n\r\n  const init = () => {\r\n\r\n    let canvasW = showEl.current.clientWidth;\r\n    let canvasH = showEl.current.clientHeight;\r\n\r\n    console.log('w:' + canvasW + '    h:' + canvasH)\r\n\r\n    const scene = new THREE.Scene()\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    const camera = new THREE.PerspectiveCamera(45, canvasW / canvasH, 0.1, 1000);\r\n\r\n    setScene(scene);\r\n    setCamera(camera);\r\n    setRenderer(renderer);\r\n\r\n\r\n    renderer.physicallyCorrectLights = true;\r\n    renderer.outputEncoding = THREE.sRGBEncoding;\r\n    renderer.setClearColor(0xcccccc);\r\n    //像素\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(canvasW, canvasH);\r\n\r\n\r\n\r\n    // const geometry = new THREE.BoxGeometry();\r\n    // const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n    // let cube = new THREE.Mesh(geometry, material);\r\n    // setCube(cube)\r\n\r\n    // scene.add(cube);\r\n\r\n    camera.position.z = 30;\r\n    camera.position.x = 0;\r\n    camera.position.y = 15;\r\n    // console.log('camera', camera)\r\n\r\n\r\n    //环境光\r\n    const ablight = new THREE.AmbientLight(0xFFFFFF, 2);\r\n    scene.add(ablight);\r\n\r\n    const light = new THREE.DirectionalLight(0xFFFFFF, 3 * Math.PI);\r\n    light.position.set(0.5, 0, 0.866);\r\n    //light.target.position.set(-5, 0, 0);\r\n    camera.add(light);\r\n    scene.add(camera);\r\n\r\n\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    //限制角度\r\n    controls.maxPolarAngle = 1.5;\r\n    controls.minPolarAngle = 0.3;\r\n    // controls.maxAzimuthAngle = 0.5;\r\n    // controls.minAzimuthAngle = -0.5;\r\n\r\n    controls.update();\r\n    setControls(controls)\r\n\r\n\r\n\r\n    const loader = new GLTFLoader();\r\n    loader.load(process.env.PUBLIC_URL +\r\n      '/models/model06.glb',\r\n      (gltf) => {\r\n        // called when the resource is loaded\r\n        console.log('模型加载完成');\r\n        // console.log('gltf', gltf)\r\n\r\n        // setModel(gltf.scene.children[0])\r\n        scene.add(gltf.scene);\r\n\r\n\r\n      },\r\n      (xhr) => {\r\n        // called while loading is progressing\r\n        console.log(`${(xhr.loaded / xhr.total * 100)}% loaded`);\r\n      },\r\n      (error) => {\r\n        // called when loading has errors\r\n        console.error('An error happened', error);\r\n      },\r\n    );\r\n\r\n\r\n    renderer.render(scene, camera);\r\n    showEl.current.appendChild(renderer.domElement);\r\n  }\r\n\r\n\r\n  const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]\r\n\r\n  const hundleClick = (item) => {\r\n    // console.log(item)\r\n\r\n    arr.forEach(element => {\r\n\r\n      if (element > item) {\r\n        scene.getObjectByName('c' + element).visible = false\r\n      } else {\r\n        scene.getObjectByName('c' + element).visible = true\r\n      }\r\n    });\r\n\r\n    setCount(item)\r\n\r\n    // console.log('c28', scene.getObjectByName('c28'))\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='container'>\r\n\r\n\r\n\r\n      <main>\r\n        <div className=\"container py-2\">\r\n          <header className=\"pb-1 mb-2 border-bottom\">\r\n            <a href=\"/\" className=\"d-flex align-items-center text-dark text-decoration-none\">\r\n              <img alt='Welcome' width=\"50\" height=\"32\" src={process.env.PUBLIC_URL + '/mount-fuji.svg'}></img>\r\n              <span className=\"fs-4\">箱体垛型演示</span>\r\n            </a>\r\n          </header>\r\n\r\n          <div style={{ position: 'absolute', margin: 8 }}>\r\n            {count} 件垛型\r\n          </div>\r\n\r\n          <div\r\n            id=\"canvas\"\r\n            style={{ width: '100%', height: '400px', background: '#888' }}\r\n            ref={showEl}\r\n          />\r\n\r\n          <div className=\"mt-1\" style={{ width: '100%', }}>\r\n\r\n            {arr.map((item, index) => {\r\n              return (\r\n\r\n                <button\r\n                  key={index}\r\n                  className=\"btn btn-outline-secondary mt-1 text-center\"\r\n                  style={{\r\n                    width: '12%',\r\n                    padding: '0.375rem 0.5rem',\r\n                    marginRight: '0.5%'\r\n                    // backgroundColor: 'red'\r\n\r\n                  }}\r\n                  onClick={hundleClick.bind(this, item)}\r\n                >\r\n                  {item}\r\n                </button>\r\n\r\n              )\r\n            })}\r\n\r\n            <button className=\"btn btn-outline-dark mt-1 text-center\"\r\n              style={{ width: '23%', marginRight: '1%', marginLeft: '1%' }}\r\n              onClick={() => {\r\n                controls.reset();\r\n                camera.position.z = 30;\r\n                camera.position.x = 0;\r\n                camera.position.y = 15;\r\n                controls.update();\r\n              }}\r\n            >正面</button>\r\n\r\n            <button className=\"btn btn-outline-dark mt-1 text-center\"\r\n              style={{ width: '23%', marginRight: '1%', marginLeft: '0.5%' }}\r\n              onClick={() => {\r\n                controls.reset();\r\n                camera.position.z = -30;\r\n                camera.position.x = 0;\r\n                camera.position.y = 15;\r\n                controls.update();\r\n\r\n              }}\r\n            >背面</button>\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n          <footer className=\"pt-3 mt-4 text-muted border-top text-center\" >\r\n            <img alt='Welcome' style={{ marginTop: -10 }} width=\"30\" height=\"24\"\r\n              src={process.env.PUBLIC_URL + '/mount-fuji.svg'} ></img> 峰 &copy; 2021\r\n          </footer>\r\n\r\n\r\n        </div>\r\n\r\n\r\n      </main>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}