{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","showEl","useRef","scene","setScene","useState","camera","setCamera","renderer","setRenderer","controls","setControls","count","setCount","model","setModel","animate","requestAnimationFrame","render","useEffect","console","log","current","init","canvasW","clientWidth","canvasH","clientHeight","THREE","antialias","physicallyCorrectLights","outputEncoding","setClearColor","setPixelRatio","window","devicePixelRatio","setSize","position","z","x","y","ablight","add","light","Math","PI","set","OrbitControls","domElement","maxPolarAngle","minPolarAngle","update","GLTFLoader","load","process","gltf","xhr","concat","loaded","total","error","appendChild","arr","hundleClick","item","forEach","element","getObjectByName","visible","_jsx","className","children","_jsxs","href","alt","width","height","src","style","margin","id","background","ref","map","index","padding","marginRight","onClick","bind","this","marginLeft","reset","marginTop","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0397ccfd.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nfunction App() {\n  const showEl = useRef()\n\n  const [scene, setScene] = useState();\n  const [camera, setCamera] = useState();\n  const [renderer, setRenderer] = useState();\n  const [controls, setControls] = useState();\n  const [count, setCount] = useState(28);\n\n  const [model, setModel] = useState();\n\n\n  useEffect(() => {\n    console.log('animate')\n    animate();\n  }, [renderer]);\n\n  function animate() {\n    // console.log('animate')\n    requestAnimationFrame(animate);\n    // if (cube) {\n    //   cube.rotation.x += 0.01;\n    //   cube.rotation.y += 0.01;\n    // }\n    if (renderer) {\n      renderer.render(scene, camera);\n    }\n\n  }\n\n\n  useEffect(() => {\n    if (showEl.current) {\n      // console.log('showEl', showEl.current)\n      init();\n    }\n  }, []);\n\n\n  // useEffect(() => {\n  //   if (model) {\n  //     console.log('model',model)\n  //     if (scene) {\n\n  //       let mesh01 = new THREE.Mesh(model.geometry,model.material);\n  //       mesh01.scale.x=model.scale.x\n  //       mesh01.scale.y=model.scale.y\n  //       mesh01.scale.z=model.scale.z\n  //       scene.add(mesh01);\n\n  //       let mesh02 = new THREE.Mesh(model.geometry,model.material);\n  //       mesh02.position.x=9.3\n  //       mesh02.scale.x=model.scale.x\n  //       mesh02.scale.y=model.scale.y\n  //       mesh02.scale.z=model.scale.z\n  //       scene.add(mesh02);\n\n  //       let mesh03 = new THREE.Mesh(model.geometry,model.material);\n  //       mesh03.position.x=9.3\n  //       mesh03.scale.x=model.scale.x\n  //       mesh03.scale.y=model.scale.y\n  //       mesh03.scale.z=model.scale.z\n  //       scene.add(mesh03);\n\n\n\n  //     }\n  //   }\n  // }, [model]);\n\n\n  const init = () => {\n\n    let canvasW = showEl.current.clientWidth;\n    let canvasH = showEl.current.clientHeight;\n\n    console.log('w:' + canvasW + '    h:' + canvasH)\n\n    const scene = new THREE.Scene()\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    const camera = new THREE.PerspectiveCamera(45, canvasW / canvasH, 0.1, 1000);\n\n    setScene(scene);\n    setCamera(camera);\n    setRenderer(renderer);\n\n\n    renderer.physicallyCorrectLights = true;\n    renderer.outputEncoding = THREE.sRGBEncoding;\n    renderer.setClearColor(0xcccccc);\n    //像素\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(canvasW, canvasH);\n\n\n\n    // const geometry = new THREE.BoxGeometry();\n    // const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    // let cube = new THREE.Mesh(geometry, material);\n    // setCube(cube)\n\n    // scene.add(cube);\n\n    camera.position.z = 30;\n    camera.position.x = 0;\n    camera.position.y = 15;\n    // console.log('camera', camera)\n\n\n    //环境光\n    const ablight = new THREE.AmbientLight(0xFFFFFF, 2);\n    scene.add(ablight);\n\n    const light = new THREE.DirectionalLight(0xFFFFFF, 3 * Math.PI);\n    light.position.set(0.5, 0, 0.866);\n    //light.target.position.set(-5, 0, 0);\n    camera.add(light);\n    scene.add(camera);\n\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    //限制角度\n    controls.maxPolarAngle = 1.5;\n    controls.minPolarAngle = 0.3;\n    // controls.maxAzimuthAngle = 0.5;\n    // controls.minAzimuthAngle = -0.5;\n\n    controls.update();\n    setControls(controls)\n\n\n\n    const loader = new GLTFLoader();\n    loader.load(process.env.PUBLIC_URL +\n      '/models/model06.glb',\n      (gltf) => {\n        // called when the resource is loaded\n        console.log('模型加载完成');\n        // console.log('gltf', gltf)\n\n        // setModel(gltf.scene.children[0])\n        scene.add(gltf.scene);\n\n\n      },\n      (xhr) => {\n        // called while loading is progressing\n        console.log(`${(xhr.loaded / xhr.total * 100)}% loaded`);\n      },\n      (error) => {\n        // called when loading has errors\n        console.error('An error happened', error);\n      },\n    );\n\n\n    renderer.render(scene, camera);\n    showEl.current.appendChild(renderer.domElement);\n  }\n\n\n  const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]\n\n  const hundleClick = (item) => {\n    // console.log(item)\n\n    arr.forEach(element => {\n\n      if (element > item) {\n        scene.getObjectByName('c' + element).visible = false\n      } else {\n        scene.getObjectByName('c' + element).visible = true\n      }\n    });\n\n    setCount(item)\n\n    // console.log('c28', scene.getObjectByName('c28'))\n\n  }\n\n\n  return (\n    <div className='container'>\n\n\n\n      <main>\n        <div className=\"container py-2\">\n          <header className=\"pb-1 mb-2 border-bottom\">\n            <a href=\"/\" className=\"d-flex align-items-center text-dark text-decoration-none\">\n              <img alt='Welcome' width=\"50\" height=\"32\" src={process.env.PUBLIC_URL + '/mount-fuji.svg'}></img>\n              <span className=\"fs-4\">箱体垛型演示</span>\n            </a>\n          </header>\n\n          <div style={{ position: 'absolute', margin: 8 }}>\n            {count} 件垛型\n          </div>\n\n          <div\n            id=\"canvas\"\n            style={{ width: '100%', height: '400px', background: '#888' }}\n            ref={showEl}\n          />\n\n          <div className=\"mt-1\" style={{ width: '100%', }}>\n\n            {arr.map((item, index) => {\n              return (\n\n                <button\n                  key={index}\n                  className=\"btn btn-outline-secondary mt-1 text-center\"\n                  style={{\n                    width: '12%',\n                    padding: '0.375rem 0.5rem',\n                    marginRight: '0.5%'\n                    // backgroundColor: 'red'\n\n                  }}\n                  onClick={hundleClick.bind(this, item)}\n                >\n                  {item}\n                </button>\n\n              )\n            })}\n\n            <button className=\"btn btn-outline-dark mt-1 text-center\"\n              style={{ width: '23%', marginRight: '1%', marginLeft: '1%' }}\n              onClick={() => {\n                controls.reset();\n                camera.position.z = 30;\n                camera.position.x = 0;\n                camera.position.y = 15;\n                controls.update();\n              }}\n            >正面</button>\n\n            <button className=\"btn btn-outline-dark mt-1 text-center\"\n              style={{ width: '23%', marginRight: '1%', marginLeft: '0.5%' }}\n              onClick={() => {\n                controls.reset();\n                camera.position.z = -30;\n                camera.position.x = 0;\n                camera.position.y = 15;\n                controls.update();\n\n              }}\n            >背面</button>\n\n          </div>\n\n\n\n\n          <footer className=\"pt-3 mt-4 text-muted border-top text-center\" >\n            <img alt='Welcome' style={{ marginTop: -10 }} width=\"30\" height=\"24\"\n              src={process.env.PUBLIC_URL + '/mount-fuji.svg'} ></img> 物流 &copy; 2021\n          </footer>\n\n\n        </div>\n\n\n      </main>\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}