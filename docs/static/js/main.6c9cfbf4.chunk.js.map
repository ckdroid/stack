{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","showEl","useRef","scene","setScene","useState","camera","setCamera","renderer","setRenderer","controls","setControls","count","setCount","composer","setComposer","outlinePass","setOutlinePass","angle","setAngle","animate","requestAnimationFrame","rotation","dir","normalizeAngle","console","log","getDirection","Math","round","THREE","radToDeg","z","render","useEffect","current","init","canvasW","clientWidth","canvasH","clientHeight","antialias","physicallyCorrectLights","setClearColor","setPixelRatio","window","devicePixelRatio","setSize","position","x","y","ablight","add","light","PI","set","OrbitControls","domElement","maxPolarAngle","minPolarAngle","update","GLTFLoader","load","process","gltf","xhr","concat","loaded","total","error","appendChild","EffectComposer","renderPass","RenderPass","addPass","OutlinePass","innerWidth","innerHeight","usePatternTexture","visibleEdgeColor","hiddenEdgeColor","texture","patternTexture","wrapS","wrapT","outputPass","OutputPass","effectFXAA","ShaderPass","FXAAShader","uniforms","value","arr","hundleClick","item","forEach","element","getObjectByName","visible","selectedObjects","_jsx","className","children","_jsxs","href","alt","width","height","src","style","margin","backgroundColor","textAlign","marginTop","id","background","ref","map","index","padding","marginRight","onClick","bind","this","marginLeft","reset","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c9cfbf4.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\n\r\n\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\r\nimport { OutlinePass } from 'three/examples/jsm/postprocessing/OutlinePass.js';\r\nimport { OutputPass } from 'three/examples/jsm/postprocessing/OutputPass.js';\r\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader.js';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nfunction App() {\r\n  const showEl = useRef()\r\n\r\n  const [scene, setScene] = useState();\r\n  const [camera, setCamera] = useState();\r\n  const [renderer, setRenderer] = useState();\r\n  const [controls, setControls] = useState();\r\n  const [count, setCount] = useState(28);\r\n\r\n  const [composer, setComposer] = useState();\r\n  const [outlinePass, setOutlinePass] = useState();\r\n\r\n  const [angle, setAngle] = useState();\r\n\r\n  const toDegrees = (radians) => radians * (180 / Math.PI);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('animate')\r\n    animate();\r\n  }, [composer]);\r\n\r\n  // 将角度转换为0到360度之间的值\r\n  function normalizeAngle(angle) {\r\n    angle = angle % 360; // 确保角度在0到359度之间\r\n    if (angle < 0) {\r\n      angle += 360; // 确保角度为正数\r\n    }\r\n    return angle;\r\n  }\r\n\r\n  // 将角度转换为前后左右方向\r\n  function getDirection(angle) {\r\n    angle = normalizeAngle(angle);\r\n    console.log(angle)\r\n    if (angle >= 0 && angle < 20 || angle >= 340 && angle < 360) {\r\n      return '正面';\r\n    } else if (angle >= 20 && angle < 160) {\r\n      return '右侧';\r\n    } else if (angle >= 160 && angle < 210) {\r\n      return '背面';\r\n    } else if (angle >= 210 && angle < 340) {\r\n      return '左侧';\r\n    }\r\n  }\r\n\r\n\r\n  function animate() {\r\n\r\n    requestAnimationFrame(animate);\r\n\r\n    // if (renderer) {\r\n    //   renderer.render(scene, camera);\r\n    // }\r\n\r\n    // 获取相机的旋转角度\r\n    if (camera) {\r\n      let rotation = camera.rotation;\r\n      let angle = Math.round(THREE.MathUtils.radToDeg(rotation.z));\r\n      let dir = getDirection(angle)\r\n\r\n      setAngle(dir)\r\n    }\r\n\r\n\r\n    if (composer) {\r\n      composer.render();\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (showEl.current) {\r\n      // console.log('showEl', showEl.current)\r\n      init();\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const init = () => {\r\n\r\n    let canvasW = showEl.current.clientWidth;\r\n    let canvasH = showEl.current.clientHeight;\r\n\r\n    console.log('w:' + canvasW + '    h:' + canvasH)\r\n\r\n    const scene = new THREE.Scene()\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    const camera = new THREE.PerspectiveCamera(45, canvasW / canvasH, 0.1, 1000);\r\n\r\n    setScene(scene);\r\n    setCamera(camera);\r\n    setRenderer(renderer);\r\n\r\n\r\n    renderer.physicallyCorrectLights = true;\r\n    renderer.setClearColor(0xcccccc);\r\n    //像素\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(canvasW, canvasH);\r\n\r\n\r\n    camera.position.z = 30;\r\n    camera.position.x = 0;\r\n    camera.position.y = 15;\r\n    // console.log('camera', camera)\r\n\r\n\r\n    //环境光\r\n    const ablight = new THREE.AmbientLight(0xFFFFFF, 2);\r\n    scene.add(ablight);\r\n\r\n    const light = new THREE.DirectionalLight(0xFFFFFF, 3 * Math.PI);\r\n    light.position.set(0.5, 0, 0.866);\r\n    //light.target.position.set(-5, 0, 0);\r\n    camera.add(light);\r\n    scene.add(camera);\r\n\r\n\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    //限制角度\r\n    controls.maxPolarAngle = 1.5;\r\n    controls.minPolarAngle = 0.3;\r\n    // controls.maxAzimuthAngle = 0.5;\r\n    // controls.minAzimuthAngle = -0.5;\r\n\r\n    controls.update();\r\n    setControls(controls)\r\n\r\n\r\n\r\n    const loader = new GLTFLoader();\r\n    loader.load(process.env.PUBLIC_URL +\r\n      '/models/model06.glb',\r\n      (gltf) => {\r\n        // called when the resource is loaded\r\n        console.log('模型加载完成');\r\n        // console.log('gltf', gltf)\r\n        scene.add(gltf.scene);\r\n      },\r\n      (xhr) => {\r\n        // called while loading is progressing\r\n        console.log(`${(xhr.loaded / xhr.total * 100)}% loaded`);\r\n      },\r\n      (error) => {\r\n        // called when loading has errors\r\n        console.error('An error happened', error);\r\n      },\r\n    );\r\n\r\n\r\n    renderer.render(scene, camera);\r\n    showEl.current.appendChild(renderer.domElement);\r\n\r\n    // 创建后期处理效果\r\n    // postprocessing\r\n\r\n    const composer = new EffectComposer(renderer);\r\n    const renderPass = new RenderPass(scene, camera);\r\n    composer.addPass(renderPass);\r\n    const outlinePass = new OutlinePass(new THREE.Vector2(window.innerWidth, window.innerHeight), scene, camera);\r\n    outlinePass.usePatternTexture = true;\r\n    outlinePass.visibleEdgeColor.set('#ffffff'); // 可见边缘颜色\r\n    outlinePass.hiddenEdgeColor.set('#ffffff');  // 隐藏边缘颜色\r\n\r\n    composer.addPass(outlinePass);\r\n\r\n    const textureLoader = new THREE.TextureLoader();\r\n    textureLoader.load(process.env.PUBLIC_URL +\r\n      '/models/points.png', function (texture) {\r\n        outlinePass.patternTexture = texture;\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n      });\r\n\r\n    const outputPass = new OutputPass();\r\n    composer.addPass(outputPass);\r\n\r\n    const effectFXAA = new ShaderPass(FXAAShader);\r\n    effectFXAA.uniforms['resolution'].value.set(1 / window.innerWidth, 1 / window.innerHeight);\r\n    composer.addPass(effectFXAA);\r\n\r\n    setOutlinePass(outlinePass)\r\n    setComposer(composer)\r\n\r\n  }\r\n\r\n\r\n  const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]\r\n\r\n  const hundleClick = (item) => {\r\n    // console.log(item)\r\n\r\n    arr.forEach(element => {\r\n\r\n      if (element > item) {\r\n        scene.getObjectByName('c' + element).visible = false\r\n      } else {\r\n        scene.getObjectByName('c' + element).visible = true\r\n      }\r\n    });\r\n\r\n    outlinePass.selectedObjects = [scene.getObjectByName('c' + item)];\r\n\r\n    setOutlinePass(outlinePass)\r\n\r\n    setCount(item)\r\n\r\n\r\n\r\n    // console.log('c28', scene.getObjectByName('c28'))\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='container'>\r\n\r\n      <main>\r\n        <div className=\"container py-2\">\r\n          <header className=\"pb-1 mb-2 border-bottom\">\r\n            <a href=\"/\" className=\"d-flex align-items-center text-dark text-decoration-none\">\r\n              <img alt='Welcome' width=\"50\" height=\"32\" src={process.env.PUBLIC_URL + '/mount-fuji.svg'}></img>\r\n              <span className=\"fs-4\">箱体垛型演示</span>\r\n            </a>\r\n          </header>\r\n\r\n\r\n          <div style={{ position: 'absolute', margin: 8, backgroundColor: '#d3d3d3', textAlign: 'center' }}>\r\n            <div style={{ margin: 8, width: 80 }}>{count} 件垛型 </div>\r\n          </div>\r\n\r\n          <div style={{ position: 'absolute', margin: 8, marginTop: 365, textAlign: 'center' }}>\r\n            <div style={{ margin: 2 }}>{angle}</div>\r\n          </div>\r\n\r\n\r\n          <div\r\n            id=\"canvas\"\r\n            style={{ width: '100%', height: '400px', background: '#888' }}\r\n            ref={showEl}\r\n          />\r\n\r\n          <div className=\"mt-1\" style={{ width: '100%', }}>\r\n\r\n            {arr.map((item, index) => {\r\n              return (\r\n\r\n                <button\r\n                  key={index}\r\n                  className=\"btn btn-outline-secondary mt-1 text-center\"\r\n                  style={{\r\n                    width: '12%',\r\n                    padding: '0.375rem 0.5rem',\r\n                    marginRight: '0.5%'\r\n                    // backgroundColor: 'red'\r\n\r\n                  }}\r\n                  onClick={hundleClick.bind(this, item)}\r\n                >\r\n                  {item}\r\n                </button>\r\n\r\n              )\r\n            })}\r\n\r\n            <button className=\"btn btn-outline-dark mt-1 text-center\"\r\n              style={{ width: '23%', marginRight: '1%', marginLeft: '1%' }}\r\n              onClick={() => {\r\n                controls.reset();\r\n                camera.position.z = 30;\r\n                camera.position.x = 0;\r\n                camera.position.y = 15;\r\n                controls.update();\r\n              }}\r\n            >正面</button>\r\n\r\n            <button className=\"btn btn-outline-dark mt-1 text-center\"\r\n              style={{ width: '23%', marginRight: '1%', marginLeft: '0.5%' }}\r\n              onClick={() => {\r\n                controls.reset();\r\n                camera.position.z = -30;\r\n                camera.position.x = 0;\r\n                camera.position.y = 15;\r\n                controls.update();\r\n\r\n              }}\r\n            >背面</button>\r\n\r\n          </div>\r\n\r\n\r\n          <footer className=\"pt-3 mt-4 text-muted border-top text-center\" >\r\n            <img alt='Welcome' style={{ marginTop: -10 }} width=\"30\" height=\"24\"\r\n              src={process.env.PUBLIC_URL + '/mount-fuji.svg'} ></img> 物流 &copy; 2021\r\n          </footer>\r\n\r\n\r\n        </div>\r\n\r\n\r\n      </main>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}